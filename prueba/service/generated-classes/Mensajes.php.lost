
Fri Oct 14 12:54:36 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 12:59:49 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 13:00:15 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 13:01:17 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 13:02:07 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 13:19:58 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 13:23:54 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code

Fri Oct 14 13:25:20 CEST 2016
================================================================================
Start of user code escribirMensaje function
   	   // file contents 
   	   // End of user code
Start of user code Mensajes function
   	   // file contents 
          $con = Propel::getWriteConnection(MensajesTableMap::DATABASE_NAME);
   	   $con->beginTransaction();
   
          try{
          
          $mensajes= new Mensajes();
          $child = $mensajes->add($idMensajes,$idpadre
           , $descripcionMensajes
           , $asuntoMensajes
          ,$idViaje
          );
          $father = $mensajes->get($idMensajes);
          $child->addFkpadre($father->getPrimaryKey());
          $child->save($con);
          $con->commit();
          return $this;
   	   }catch (Exception $e) {
   	
   		 $con->rollback(); //en caso de que se produzca alguna excepcion la transacci?n ser? cancelada
   		 throw $e;
   		}
   	   // End of user code
Start of user code mensajes function
   	   // file contents 
   	   // End of user code
